# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# App routes
GET     /signin                     controllers.Application.signin
GET     /signup                     controllers.Application.signup
GET     /user/:id                   controllers.Application.profile(id: String)
GET     /mentor                     controllers.Application.mentor
GET     /edit/session/:id           controllers.Application.edit(id: String)

# Ontology service routes
GET     /api/ontology/search        ontology.OntologyApi.search

# Users service routes
POST    /api/users/props            users.UsersApi.setProp
GET     /api/users/props            users.UsersApi.getProps
POST    /api/users/signup           users.UsersApi.signup
POST    /api/users/signin           users.UsersApi.signin
GET     /api/users/signout          users.UsersApi.signout

# Schedules service routes
GET     /api/schedules/session/:id  schedules.SchedulesApi.getSessionInfo(id: String)
GET     /api/schedules/allsessions  schedules.SchedulesApi.getMentorSessions
POST    /api/schedules/session      schedules.SchedulesApi.createSession

# v0.0 ROUTES

# Home page
GET     /                           controllers.Application.index

# Front-end API
GET     /api/search                 controllers.FrontendApi.search
GET     /api/availability           controllers.FrontendApi.searchAvailability
PUT     /api/infuse                 controllers.FrontendApi.infuse
POST    /api/invite                 controllers.FrontendApi.inviteFriend

# Skill Api
GET     /api/skill/data             controllers.SkillApi.page
POST    /api/skill/propose          controllers.SkillApi.propose
GET     /api/skill/search           controllers.SkillApi.search

# Skillbook Api
GET     /api/skillbook              controllers.SkillbookApi.userSkillbooks
GET     /api/skillbook/data         controllers.SkillbookApi.page
GET     /api/skillbook/subsection   controllers.SkillbookApi.subsection
POST    /api/skillbook/propose      controllers.SkillbookApi.propose
POST    /api/skillbook/skill        controllers.SkillbookApi.addSkill
PUT     /api/skillbook/name         controllers.SkillbookApi.changeName
PUT     /api/skillbook/description  controllers.SkillbookApi.changeDescription
PUT     /api/skillbook/skill        controllers.SkillbookApi.changeSkill
PUT     /api/skillbook/pin          controllers.SkillbookApi.pin
DELETE  /api/skillbook/skill        controllers.SkillbookApi.deleteSkill
DELETE  /api/skillbook              controllers.SkillbookApi.delete

# Resource Api
POST    /api/resource/propose       controllers.ResourceApi.propose

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.versioned(path="/public", file: Asset)
